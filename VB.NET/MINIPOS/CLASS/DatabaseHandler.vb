Imports System.Data.SQLite
Imports System.IO

Public Class DatabaseHandler
    Private ReadOnly dbPath As String = "E_INVOIC.db"
    Private ReadOnly connectionString As String = $"Data Source={dbPath};Version=3;"

    Public Sub InitializeDatabase()
        If Not File.Exists(dbPath) Then
            SQLiteConnection.CreateFile(dbPath)
        End If

        Using conn As New SQLiteConnection(connectionString)
            conn.Open()
            CreateTables(conn)
            UpdateTables(conn)
        End Using
    End Sub

    Private Sub CreateTables(conn As SQLiteConnection)
        Dim commands As String() = {
            "CREATE TABLE IF NOT EXISTS COM_SEETING (ID INTEGER PRIMARY KEY AUTOINCREMENT, COMPANY_NAME TEXT, COMPANY_TEL TEXT, COMPANY_TAX_NO TEXT, COMPANY_ADDRESS TEXT, COMPANY_LOGO BLOB,POS_KIND INTEGER,FOREIGN KEY(POS_KIND) REFERENCES POS_SCREEN_KIND(ID))",
            "CREATE TABLE IF NOT EXISTS PRODUCTS (ID INTEGER PRIMARY KEY AUTOINCREMENT, BARCODE TEXT, PRO_NAME TEXT, PRO_PRICE REAL, PRO_TAX_VALUE REAL, PRO_TAX_KIND TEXT, PRO_KIND INTEGER, FOREIGN KEY(PRO_KIND) REFERENCES PRO_KIND(ID))",
            "CREATE TABLE IF NOT EXISTS PRO_KIND (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS ID_CUSTOMER (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS CUSTOMERS (ID INTEGER PRIMARY KEY AUTOINCREMENT, E_ID INTEGER, C_NAME TEXT, C_TEL TEXT,C_TAX_CODE TEXT, CU_CITY INTEGER, C_POSTCODE TEXT, FOREIGN KEY(E_ID) REFERENCES ID_CUSTOMER(ID), FOREIGN KEY(CU_CITY) REFERENCES CITY_TABLE(ID))",
            "CREATE TABLE IF NOT EXISTS CITY_TABLE (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS INVOICES (ID INTEGER PRIMARY KEY AUTOINCREMENT, INV_PAY_KIND INTEGER, INV_KIND INTEGER, USER_NAME TEXT, C_ID INTEGER, REMARK_KIND INTEGER, E_CODE TEXT, E_BARCODE TEXT, DATE_TIME TEXT, INV_VALUE REAL, DISCOUNT_VALUE REAL, ITEM_VALUE REAL, TAX_VALUE REAL, CURRENCY_KIND INTEGER, INV_OUT_IN INTEGER, FOREIGN KEY(INV_PAY_KIND) REFERENCES INV_PAY_KIND(ID), FOREIGN KEY(INV_KIND) REFERENCES IN_KIND(ID), FOREIGN KEY(C_ID) REFERENCES CUSTOMERS(ID), FOREIGN KEY(CURRENCY_KIND) REFERENCES CURRENCY_TABLE(ID), FOREIGN KEY(INV_OUT_IN) REFERENCES INV_OUT_IN(ID))",
            "CREATE TABLE IF NOT EXISTS INV_PAY_KIND (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS IN_KIND (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS INV_OUT_IN (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS REMARK_KIND_TABLE (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS POS_SCREEN_KIND (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT)",
            "CREATE TABLE IF NOT EXISTS CURRENCY_TABLE (ID INTEGER PRIMARY KEY AUTOINCREMENT, TXT TEXT, C_CODE TEXT)",
            "CREATE TABLE IF NOT EXISTS ORDER_PRODUCTS (ID INTEGER PRIMARY KEY AUTOINCREMENT, PRO_KIND INTEGER, PRO_NAME TEXT, PRO_COUNT INTEGER, PRO_PRICE REAL, PRO_DISCOUNT REAL, PRO_TX_PUBLIC REAL, PRO_TAX REAL, VALUE_AFTER_DISCOUNT REAL, VALUE_OF_TAX REAL, VALUE_ORGINAL REAL, FINAL_VALUE REAL, INV_ID INTEGER, FOREIGN KEY(INV_ID) REFERENCES INVOICES(ID))",
            "CREATE TABLE IF NOT EXISTS USER_TABLE (ID INTEGER PRIMARY KEY AUTOINCREMENT, USER_NAME TEXT, USER_CODE TEXT, USER_KEY TEXT, USER_FROM TEXT)",
            "CREATE INDEX IF NOT EXISTS idx_com_seeting_id ON COM_SEETING(ID)",
            "CREATE INDEX IF NOT EXISTS idx_products_id ON PRODUCTS(ID)",
            "CREATE INDEX IF NOT EXISTS idx_pro_kind_id ON PRO_KIND(ID)",
            "CREATE INDEX IF NOT EXISTS idx_id_customer_id ON ID_CUSTOMER(ID)",
            "CREATE INDEX IF NOT EXISTS idx_customers_id ON CUSTOMERS(ID)",
            "CREATE INDEX IF NOT EXISTS idx_city_table_id ON CITY_TABLE(ID)",
            "CREATE INDEX IF NOT EXISTS idx_invoices_id ON INVOICES(ID)",
            "CREATE INDEX IF NOT EXISTS idx_inv_pay_kind_id ON INV_PAY_KIND(ID)",
            "CREATE INDEX IF NOT EXISTS idx_in_kind_id ON IN_KIND(ID)",
            "CREATE INDEX IF NOT EXISTS idx_inv_out_in_id ON INV_OUT_IN(ID)",
            "CREATE INDEX IF NOT EXISTS idx_remark_kind_table_id ON REMARK_KIND_TABLE(ID)",
            "CREATE INDEX IF NOT EXISTS idx_currency_table_id ON CURRENCY_TABLE(ID)",
            "CREATE INDEX IF NOT EXISTS idx_order_products_id ON ORDER_PRODUCTS(ID)",
            "CREATE INDEX IF NOT EXISTS idx_user_table_id ON USER_TABLE(ID)",
             "CREATE INDEX IF NOT EXISTS idx_POS_SCREEN_KIND_id ON POS_SCREEN_KIND(ID)"
        }

        For Each cmd In commands
            Using command As New SQLiteCommand(cmd, conn)
                command.ExecuteNonQuery()
            End Using
        Next
    End Sub

    Private Sub UpdateTables(conn As SQLiteConnection)
        ' Add columns if they don't exist
        Dim alterCommands As String() = {"ALTER TABLE COM_SEETING ADD COLUMN COMPANY_LOGO BLOB"}

        For Each cmd In alterCommands
            Try
                Using command As New SQLiteCommand(cmd, conn)
                    command.ExecuteNonQuery()
                End Using
            Catch ex As Exception
                ' Ignore if column already exists
            End Try
        Next
    End Sub
End Class